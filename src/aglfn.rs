pub fn glyph_name(c: char) -> Option<&'static str> {
    match c as u32 {
        0x0020 => Some("space"),                // SPACE
        0x0021 => Some("exclam"),               // EXCLAMATION MARK
        0x0022 => Some("quotedbl"),             // QUOTATION MARK
        0x0023 => Some("numbersign"),           // NUMBER SIGN
        0x0024 => Some("dollar"),               // DOLLAR SIGN
        0x0025 => Some("percent"),              // PERCENT SIGN
        0x0026 => Some("ampersand"),            // AMPERSAND
        0x0027 => Some("quotesingle"),          // APOSTROPHE
        0x0028 => Some("parenleft"),            // LEFT PARENTHESIS
        0x0029 => Some("parenright"),           // RIGHT PARENTHESIS
        0x002A => Some("asterisk"),             // ASTERISK
        0x002B => Some("plus"),                 // PLUS SIGN
        0x002C => Some("comma"),                // COMMA
        0x002D => Some("hyphen"),               // HYPHEN-MINUS
        0x002E => Some("period"),               // FULL STOP
        0x002F => Some("slash"),                // SOLIDUS
        0x0030 => Some("zero"),                 // DIGIT ZERO
        0x0031 => Some("one"),                  // DIGIT ONE
        0x0032 => Some("two"),                  // DIGIT TWO
        0x0033 => Some("three"),                // DIGIT THREE
        0x0034 => Some("four"),                 // DIGIT FOUR
        0x0035 => Some("five"),                 // DIGIT FIVE
        0x0036 => Some("six"),                  // DIGIT SIX
        0x0037 => Some("seven"),                // DIGIT SEVEN
        0x0038 => Some("eight"),                // DIGIT EIGHT
        0x0039 => Some("nine"),                 // DIGIT NINE
        0x003A => Some("colon"),                // COLON
        0x003B => Some("semicolon"),            // SEMICOLON
        0x003C => Some("less"),                 // LESS-THAN SIGN
        0x003D => Some("equal"),                // EQUALS SIGN
        0x003E => Some("greater"),              // GREATER-THAN SIGN
        0x003F => Some("question"),             // QUESTION MARK
        0x0040 => Some("at"),                   // COMMERCIAL AT
        0x0041 => Some("A"),                    // LATIN CAPITAL LETTER A
        0x0042 => Some("B"),                    // LATIN CAPITAL LETTER B
        0x0043 => Some("C"),                    // LATIN CAPITAL LETTER C
        0x0044 => Some("D"),                    // LATIN CAPITAL LETTER D
        0x0045 => Some("E"),                    // LATIN CAPITAL LETTER E
        0x0046 => Some("F"),                    // LATIN CAPITAL LETTER F
        0x0047 => Some("G"),                    // LATIN CAPITAL LETTER G
        0x0048 => Some("H"),                    // LATIN CAPITAL LETTER H
        0x0049 => Some("I"),                    // LATIN CAPITAL LETTER I
        0x004A => Some("J"),                    // LATIN CAPITAL LETTER J
        0x004B => Some("K"),                    // LATIN CAPITAL LETTER K
        0x004C => Some("L"),                    // LATIN CAPITAL LETTER L
        0x004D => Some("M"),                    // LATIN CAPITAL LETTER M
        0x004E => Some("N"),                    // LATIN CAPITAL LETTER N
        0x004F => Some("O"),                    // LATIN CAPITAL LETTER O
        0x0050 => Some("P"),                    // LATIN CAPITAL LETTER P
        0x0051 => Some("Q"),                    // LATIN CAPITAL LETTER Q
        0x0052 => Some("R"),                    // LATIN CAPITAL LETTER R
        0x0053 => Some("S"),                    // LATIN CAPITAL LETTER S
        0x0054 => Some("T"),                    // LATIN CAPITAL LETTER T
        0x0055 => Some("U"),                    // LATIN CAPITAL LETTER U
        0x0056 => Some("V"),                    // LATIN CAPITAL LETTER V
        0x0057 => Some("W"),                    // LATIN CAPITAL LETTER W
        0x0058 => Some("X"),                    // LATIN CAPITAL LETTER X
        0x0059 => Some("Y"),                    // LATIN CAPITAL LETTER Y
        0x005A => Some("Z"),                    // LATIN CAPITAL LETTER Z
        0x005B => Some("bracketleft"),          // LEFT SQUARE BRACKET
        0x005C => Some("backslash"),            // REVERSE SOLIDUS
        0x005D => Some("bracketright"),         // RIGHT SQUARE BRACKET
        0x005E => Some("asciicircum"),          // CIRCUMFLEX ACCENT
        0x005F => Some("underscore"),           // LOW LINE
        0x0060 => Some("grave"),                // GRAVE ACCENT
        0x0061 => Some("a"),                    // LATIN SMALL LETTER A
        0x0062 => Some("b"),                    // LATIN SMALL LETTER B
        0x0063 => Some("c"),                    // LATIN SMALL LETTER C
        0x0064 => Some("d"),                    // LATIN SMALL LETTER D
        0x0065 => Some("e"),                    // LATIN SMALL LETTER E
        0x0066 => Some("f"),                    // LATIN SMALL LETTER F
        0x0067 => Some("g"),                    // LATIN SMALL LETTER G
        0x0068 => Some("h"),                    // LATIN SMALL LETTER H
        0x0069 => Some("i"),                    // LATIN SMALL LETTER I
        0x006A => Some("j"),                    // LATIN SMALL LETTER J
        0x006B => Some("k"),                    // LATIN SMALL LETTER K
        0x006C => Some("l"),                    // LATIN SMALL LETTER L
        0x006D => Some("m"),                    // LATIN SMALL LETTER M
        0x006E => Some("n"),                    // LATIN SMALL LETTER N
        0x006F => Some("o"),                    // LATIN SMALL LETTER O
        0x0070 => Some("p"),                    // LATIN SMALL LETTER P
        0x0071 => Some("q"),                    // LATIN SMALL LETTER Q
        0x0072 => Some("r"),                    // LATIN SMALL LETTER R
        0x0073 => Some("s"),                    // LATIN SMALL LETTER S
        0x0074 => Some("t"),                    // LATIN SMALL LETTER T
        0x0075 => Some("u"),                    // LATIN SMALL LETTER U
        0x0076 => Some("v"),                    // LATIN SMALL LETTER V
        0x0077 => Some("w"),                    // LATIN SMALL LETTER W
        0x0078 => Some("x"),                    // LATIN SMALL LETTER X
        0x0079 => Some("y"),                    // LATIN SMALL LETTER Y
        0x007A => Some("z"),                    // LATIN SMALL LETTER Z
        0x007B => Some("braceleft"),            // LEFT CURLY BRACKET
        0x007C => Some("bar"),                  // VERTICAL LINE
        0x007D => Some("braceright"),           // RIGHT CURLY BRACKET
        0x007E => Some("asciitilde"),           // TILDE
        0x00A1 => Some("exclamdown"),           // INVERTED EXCLAMATION MARK
        0x00A2 => Some("cent"),                 // CENT SIGN
        0x00A3 => Some("sterling"),             // POUND SIGN
        0x00A4 => Some("currency"),             // CURRENCY SIGN
        0x00A5 => Some("yen"),                  // YEN SIGN
        0x00A6 => Some("brokenbar"),            // BROKEN BAR
        0x00A7 => Some("section"),              // SECTION SIGN
        0x00A8 => Some("dieresis"),             // DIAERESIS
        0x00A9 => Some("copyright"),            // COPYRIGHT SIGN
        0x00AA => Some("ordfeminine"),          // FEMININE ORDINAL INDICATOR
        0x00AB => Some("guillemotleft"),        // LEFT-POINTING DOUBLE ANGLE QUOTATION MARK
        0x00AC => Some("logicalnot"),           // NOT SIGN
        0x00AE => Some("registered"),           // REGISTERED SIGN
        0x00AF => Some("macron"),               // MACRON
        0x00B0 => Some("degree"),               // DEGREE SIGN
        0x00B1 => Some("plusminus"),            // PLUS-MINUS SIGN
        0x00B4 => Some("acute"),                // ACUTE ACCENT
        0x00B5 => Some("mu"),                   // MICRO SIGN
        0x00B6 => Some("paragraph"),            // PILCROW SIGN
        0x00B7 => Some("periodcentered"),       // MIDDLE DOT
        0x00B8 => Some("cedilla"),              // CEDILLA
        0x00BA => Some("ordmasculine"),         // MASCULINE ORDINAL INDICATOR
        0x00BB => Some("guillemotright"),       // RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK
        0x00BC => Some("onequarter"),           // VULGAR FRACTION ONE QUARTER
        0x00BD => Some("onehalf"),              // VULGAR FRACTION ONE HALF
        0x00BE => Some("threequarters"),        // VULGAR FRACTION THREE QUARTERS
        0x00BF => Some("questiondown"),         // INVERTED QUESTION MARK
        0x00C0 => Some("Agrave"),               // LATIN CAPITAL LETTER A WITH GRAVE
        0x00C1 => Some("Aacute"),               // LATIN CAPITAL LETTER A WITH ACUTE
        0x00C2 => Some("Acircumflex"),          // LATIN CAPITAL LETTER A WITH CIRCUMFLEX
        0x00C3 => Some("Atilde"),               // LATIN CAPITAL LETTER A WITH TILDE
        0x00C4 => Some("Adieresis"),            // LATIN CAPITAL LETTER A WITH DIAERESIS
        0x00C5 => Some("Aring"),                // LATIN CAPITAL LETTER A WITH RING ABOVE
        0x00C6 => Some("AE"),                   // LATIN CAPITAL LETTER AE
        0x00C7 => Some("Ccedilla"),             // LATIN CAPITAL LETTER C WITH CEDILLA
        0x00C8 => Some("Egrave"),               // LATIN CAPITAL LETTER E WITH GRAVE
        0x00C9 => Some("Eacute"),               // LATIN CAPITAL LETTER E WITH ACUTE
        0x00CA => Some("Ecircumflex"),          // LATIN CAPITAL LETTER E WITH CIRCUMFLEX
        0x00CB => Some("Edieresis"),            // LATIN CAPITAL LETTER E WITH DIAERESIS
        0x00CC => Some("Igrave"),               // LATIN CAPITAL LETTER I WITH GRAVE
        0x00CD => Some("Iacute"),               // LATIN CAPITAL LETTER I WITH ACUTE
        0x00CE => Some("Icircumflex"),          // LATIN CAPITAL LETTER I WITH CIRCUMFLEX
        0x00CF => Some("Idieresis"),            // LATIN CAPITAL LETTER I WITH DIAERESIS
        0x00D0 => Some("Eth"),                  // LATIN CAPITAL LETTER ETH
        0x00D1 => Some("Ntilde"),               // LATIN CAPITAL LETTER N WITH TILDE
        0x00D2 => Some("Ograve"),               // LATIN CAPITAL LETTER O WITH GRAVE
        0x00D3 => Some("Oacute"),               // LATIN CAPITAL LETTER O WITH ACUTE
        0x00D4 => Some("Ocircumflex"),          // LATIN CAPITAL LETTER O WITH CIRCUMFLEX
        0x00D5 => Some("Otilde"),               // LATIN CAPITAL LETTER O WITH TILDE
        0x00D6 => Some("Odieresis"),            // LATIN CAPITAL LETTER O WITH DIAERESIS
        0x00D7 => Some("multiply"),             // MULTIPLICATION SIGN
        0x00D8 => Some("Oslash"),               // LATIN CAPITAL LETTER O WITH STROKE
        0x00D9 => Some("Ugrave"),               // LATIN CAPITAL LETTER U WITH GRAVE
        0x00DA => Some("Uacute"),               // LATIN CAPITAL LETTER U WITH ACUTE
        0x00DB => Some("Ucircumflex"),          // LATIN CAPITAL LETTER U WITH CIRCUMFLEX
        0x00DC => Some("Udieresis"),            // LATIN CAPITAL LETTER U WITH DIAERESIS
        0x00DD => Some("Yacute"),               // LATIN CAPITAL LETTER Y WITH ACUTE
        0x00DE => Some("Thorn"),                // LATIN CAPITAL LETTER THORN
        0x00DF => Some("germandbls"),           // LATIN SMALL LETTER SHARP S
        0x00E0 => Some("agrave"),               // LATIN SMALL LETTER A WITH GRAVE
        0x00E1 => Some("aacute"),               // LATIN SMALL LETTER A WITH ACUTE
        0x00E2 => Some("acircumflex"),          // LATIN SMALL LETTER A WITH CIRCUMFLEX
        0x00E3 => Some("atilde"),               // LATIN SMALL LETTER A WITH TILDE
        0x00E4 => Some("adieresis"),            // LATIN SMALL LETTER A WITH DIAERESIS
        0x00E5 => Some("aring"),                // LATIN SMALL LETTER A WITH RING ABOVE
        0x00E6 => Some("ae"),                   // LATIN SMALL LETTER AE
        0x00E7 => Some("ccedilla"),             // LATIN SMALL LETTER C WITH CEDILLA
        0x00E8 => Some("egrave"),               // LATIN SMALL LETTER E WITH GRAVE
        0x00E9 => Some("eacute"),               // LATIN SMALL LETTER E WITH ACUTE
        0x00EA => Some("ecircumflex"),          // LATIN SMALL LETTER E WITH CIRCUMFLEX
        0x00EB => Some("edieresis"),            // LATIN SMALL LETTER E WITH DIAERESIS
        0x00EC => Some("igrave"),               // LATIN SMALL LETTER I WITH GRAVE
        0x00ED => Some("iacute"),               // LATIN SMALL LETTER I WITH ACUTE
        0x00EE => Some("icircumflex"),          // LATIN SMALL LETTER I WITH CIRCUMFLEX
        0x00EF => Some("idieresis"),            // LATIN SMALL LETTER I WITH DIAERESIS
        0x00F0 => Some("eth"),                  // LATIN SMALL LETTER ETH
        0x00F1 => Some("ntilde"),               // LATIN SMALL LETTER N WITH TILDE
        0x00F2 => Some("ograve"),               // LATIN SMALL LETTER O WITH GRAVE
        0x00F3 => Some("oacute"),               // LATIN SMALL LETTER O WITH ACUTE
        0x00F4 => Some("ocircumflex"),          // LATIN SMALL LETTER O WITH CIRCUMFLEX
        0x00F5 => Some("otilde"),               // LATIN SMALL LETTER O WITH TILDE
        0x00F6 => Some("odieresis"),            // LATIN SMALL LETTER O WITH DIAERESIS
        0x00F7 => Some("divide"),               // DIVISION SIGN
        0x00F8 => Some("oslash"),               // LATIN SMALL LETTER O WITH STROKE
        0x00F9 => Some("ugrave"),               // LATIN SMALL LETTER U WITH GRAVE
        0x00FA => Some("uacute"),               // LATIN SMALL LETTER U WITH ACUTE
        0x00FB => Some("ucircumflex"),          // LATIN SMALL LETTER U WITH CIRCUMFLEX
        0x00FC => Some("udieresis"),            // LATIN SMALL LETTER U WITH DIAERESIS
        0x00FD => Some("yacute"),               // LATIN SMALL LETTER Y WITH ACUTE
        0x00FE => Some("thorn"),                // LATIN SMALL LETTER THORN
        0x00FF => Some("ydieresis"),            // LATIN SMALL LETTER Y WITH DIAERESIS
        0x0100 => Some("Amacron"),              // LATIN CAPITAL LETTER A WITH MACRON
        0x0101 => Some("amacron"),              // LATIN SMALL LETTER A WITH MACRON
        0x0102 => Some("Abreve"),               // LATIN CAPITAL LETTER A WITH BREVE
        0x0103 => Some("abreve"),               // LATIN SMALL LETTER A WITH BREVE
        0x0104 => Some("Aogonek"),              // LATIN CAPITAL LETTER A WITH OGONEK
        0x0105 => Some("aogonek"),              // LATIN SMALL LETTER A WITH OGONEK
        0x0106 => Some("Cacute"),               // LATIN CAPITAL LETTER C WITH ACUTE
        0x0107 => Some("cacute"),               // LATIN SMALL LETTER C WITH ACUTE
        0x0108 => Some("Ccircumflex"),          // LATIN CAPITAL LETTER C WITH CIRCUMFLEX
        0x0109 => Some("ccircumflex"),          // LATIN SMALL LETTER C WITH CIRCUMFLEX
        0x010A => Some("Cdotaccent"),           // LATIN CAPITAL LETTER C WITH DOT ABOVE
        0x010B => Some("cdotaccent"),           // LATIN SMALL LETTER C WITH DOT ABOVE
        0x010C => Some("Ccaron"),               // LATIN CAPITAL LETTER C WITH CARON
        0x010D => Some("ccaron"),               // LATIN SMALL LETTER C WITH CARON
        0x010E => Some("Dcaron"),               // LATIN CAPITAL LETTER D WITH CARON
        0x010F => Some("dcaron"),               // LATIN SMALL LETTER D WITH CARON
        0x0110 => Some("Dcroat"),               // LATIN CAPITAL LETTER D WITH STROKE
        0x0111 => Some("dcroat"),               // LATIN SMALL LETTER D WITH STROKE
        0x0112 => Some("Emacron"),              // LATIN CAPITAL LETTER E WITH MACRON
        0x0113 => Some("emacron"),              // LATIN SMALL LETTER E WITH MACRON
        0x0114 => Some("Ebreve"),               // LATIN CAPITAL LETTER E WITH BREVE
        0x0115 => Some("ebreve"),               // LATIN SMALL LETTER E WITH BREVE
        0x0116 => Some("Edotaccent"),           // LATIN CAPITAL LETTER E WITH DOT ABOVE
        0x0117 => Some("edotaccent"),           // LATIN SMALL LETTER E WITH DOT ABOVE
        0x0118 => Some("Eogonek"),              // LATIN CAPITAL LETTER E WITH OGONEK
        0x0119 => Some("eogonek"),              // LATIN SMALL LETTER E WITH OGONEK
        0x011A => Some("Ecaron"),               // LATIN CAPITAL LETTER E WITH CARON
        0x011B => Some("ecaron"),               // LATIN SMALL LETTER E WITH CARON
        0x011C => Some("Gcircumflex"),          // LATIN CAPITAL LETTER G WITH CIRCUMFLEX
        0x011D => Some("gcircumflex"),          // LATIN SMALL LETTER G WITH CIRCUMFLEX
        0x011E => Some("Gbreve"),               // LATIN CAPITAL LETTER G WITH BREVE
        0x011F => Some("gbreve"),               // LATIN SMALL LETTER G WITH BREVE
        0x0120 => Some("Gdotaccent"),           // LATIN CAPITAL LETTER G WITH DOT ABOVE
        0x0121 => Some("gdotaccent"),           // LATIN SMALL LETTER G WITH DOT ABOVE
        0x0124 => Some("Hcircumflex"),          // LATIN CAPITAL LETTER H WITH CIRCUMFLEX
        0x0125 => Some("hcircumflex"),          // LATIN SMALL LETTER H WITH CIRCUMFLEX
        0x0126 => Some("Hbar"),                 // LATIN CAPITAL LETTER H WITH STROKE
        0x0127 => Some("hbar"),                 // LATIN SMALL LETTER H WITH STROKE
        0x0128 => Some("Itilde"),               // LATIN CAPITAL LETTER I WITH TILDE
        0x0129 => Some("itilde"),               // LATIN SMALL LETTER I WITH TILDE
        0x012A => Some("Imacron"),              // LATIN CAPITAL LETTER I WITH MACRON
        0x012B => Some("imacron"),              // LATIN SMALL LETTER I WITH MACRON
        0x012C => Some("Ibreve"),               // LATIN CAPITAL LETTER I WITH BREVE
        0x012D => Some("ibreve"),               // LATIN SMALL LETTER I WITH BREVE
        0x012E => Some("Iogonek"),              // LATIN CAPITAL LETTER I WITH OGONEK
        0x012F => Some("iogonek"),              // LATIN SMALL LETTER I WITH OGONEK
        0x0130 => Some("Idotaccent"),           // LATIN CAPITAL LETTER I WITH DOT ABOVE
        0x0131 => Some("dotlessi"),             // LATIN SMALL LETTER DOTLESS I
        0x0132 => Some("IJ"),                   // LATIN CAPITAL LIGATURE IJ
        0x0133 => Some("ij"),                   // LATIN SMALL LIGATURE IJ
        0x0134 => Some("Jcircumflex"),          // LATIN CAPITAL LETTER J WITH CIRCUMFLEX
        0x0135 => Some("jcircumflex"),          // LATIN SMALL LETTER J WITH CIRCUMFLEX
        0x0138 => Some("kgreenlandic"),         // LATIN SMALL LETTER KRA
        0x0139 => Some("Lacute"),               // LATIN CAPITAL LETTER L WITH ACUTE
        0x013A => Some("lacute"),               // LATIN SMALL LETTER L WITH ACUTE
        0x013D => Some("Lcaron"),               // LATIN CAPITAL LETTER L WITH CARON
        0x013E => Some("lcaron"),               // LATIN SMALL LETTER L WITH CARON
        0x013F => Some("Ldot"),                 // LATIN CAPITAL LETTER L WITH MIDDLE DOT
        0x0140 => Some("ldot"),                 // LATIN SMALL LETTER L WITH MIDDLE DOT
        0x0141 => Some("Lslash"),               // LATIN CAPITAL LETTER L WITH STROKE
        0x0142 => Some("lslash"),               // LATIN SMALL LETTER L WITH STROKE
        0x0143 => Some("Nacute"),               // LATIN CAPITAL LETTER N WITH ACUTE
        0x0144 => Some("nacute"),               // LATIN SMALL LETTER N WITH ACUTE
        0x0147 => Some("Ncaron"),               // LATIN CAPITAL LETTER N WITH CARON
        0x0148 => Some("ncaron"),               // LATIN SMALL LETTER N WITH CARON
        0x0149 => Some("napostrophe"),          // LATIN SMALL LETTER N PRECEDED BY APOSTROPHE
        0x014A => Some("Eng"),                  // LATIN CAPITAL LETTER ENG
        0x014B => Some("eng"),                  // LATIN SMALL LETTER ENG
        0x014C => Some("Omacron"),              // LATIN CAPITAL LETTER O WITH MACRON
        0x014D => Some("omacron"),              // LATIN SMALL LETTER O WITH MACRON
        0x014E => Some("Obreve"),               // LATIN CAPITAL LETTER O WITH BREVE
        0x014F => Some("obreve"),               // LATIN SMALL LETTER O WITH BREVE
        0x0150 => Some("Ohungarumlaut"),        // LATIN CAPITAL LETTER O WITH DOUBLE ACUTE
        0x0151 => Some("ohungarumlaut"),        // LATIN SMALL LETTER O WITH DOUBLE ACUTE
        0x0152 => Some("OE"),                   // LATIN CAPITAL LIGATURE OE
        0x0153 => Some("oe"),                   // LATIN SMALL LIGATURE OE
        0x0154 => Some("Racute"),               // LATIN CAPITAL LETTER R WITH ACUTE
        0x0155 => Some("racute"),               // LATIN SMALL LETTER R WITH ACUTE
        0x0158 => Some("Rcaron"),               // LATIN CAPITAL LETTER R WITH CARON
        0x0159 => Some("rcaron"),               // LATIN SMALL LETTER R WITH CARON
        0x015A => Some("Sacute"),               // LATIN CAPITAL LETTER S WITH ACUTE
        0x015B => Some("sacute"),               // LATIN SMALL LETTER S WITH ACUTE
        0x015C => Some("Scircumflex"),          // LATIN CAPITAL LETTER S WITH CIRCUMFLEX
        0x015D => Some("scircumflex"),          // LATIN SMALL LETTER S WITH CIRCUMFLEX
        0x015E => Some("Scedilla"),             // LATIN CAPITAL LETTER S WITH CEDILLA
        0x015F => Some("scedilla"),             // LATIN SMALL LETTER S WITH CEDILLA
        0x0160 => Some("Scaron"),               // LATIN CAPITAL LETTER S WITH CARON
        0x0161 => Some("scaron"),               // LATIN SMALL LETTER S WITH CARON
        0x0164 => Some("Tcaron"),               // LATIN CAPITAL LETTER T WITH CARON
        0x0165 => Some("tcaron"),               // LATIN SMALL LETTER T WITH CARON
        0x0166 => Some("Tbar"),                 // LATIN CAPITAL LETTER T WITH STROKE
        0x0167 => Some("tbar"),                 // LATIN SMALL LETTER T WITH STROKE
        0x0168 => Some("Utilde"),               // LATIN CAPITAL LETTER U WITH TILDE
        0x0169 => Some("utilde"),               // LATIN SMALL LETTER U WITH TILDE
        0x016A => Some("Umacron"),              // LATIN CAPITAL LETTER U WITH MACRON
        0x016B => Some("umacron"),              // LATIN SMALL LETTER U WITH MACRON
        0x016C => Some("Ubreve"),               // LATIN CAPITAL LETTER U WITH BREVE
        0x016D => Some("ubreve"),               // LATIN SMALL LETTER U WITH BREVE
        0x016E => Some("Uring"),                // LATIN CAPITAL LETTER U WITH RING ABOVE
        0x016F => Some("uring"),                // LATIN SMALL LETTER U WITH RING ABOVE
        0x0170 => Some("Uhungarumlaut"),        // LATIN CAPITAL LETTER U WITH DOUBLE ACUTE
        0x0171 => Some("uhungarumlaut"),        // LATIN SMALL LETTER U WITH DOUBLE ACUTE
        0x0172 => Some("Uogonek"),              // LATIN CAPITAL LETTER U WITH OGONEK
        0x0173 => Some("uogonek"),              // LATIN SMALL LETTER U WITH OGONEK
        0x0174 => Some("Wcircumflex"),          // LATIN CAPITAL LETTER W WITH CIRCUMFLEX
        0x0175 => Some("wcircumflex"),          // LATIN SMALL LETTER W WITH CIRCUMFLEX
        0x0176 => Some("Ycircumflex"),          // LATIN CAPITAL LETTER Y WITH CIRCUMFLEX
        0x0177 => Some("ycircumflex"),          // LATIN SMALL LETTER Y WITH CIRCUMFLEX
        0x0178 => Some("Ydieresis"),            // LATIN CAPITAL LETTER Y WITH DIAERESIS
        0x0179 => Some("Zacute"),               // LATIN CAPITAL LETTER Z WITH ACUTE
        0x017A => Some("zacute"),               // LATIN SMALL LETTER Z WITH ACUTE
        0x017B => Some("Zdotaccent"),           // LATIN CAPITAL LETTER Z WITH DOT ABOVE
        0x017C => Some("zdotaccent"),           // LATIN SMALL LETTER Z WITH DOT ABOVE
        0x017D => Some("Zcaron"),               // LATIN CAPITAL LETTER Z WITH CARON
        0x017E => Some("zcaron"),               // LATIN SMALL LETTER Z WITH CARON
        0x017F => Some("longs"),                // LATIN SMALL LETTER LONG S
        0x0192 => Some("florin"),               // LATIN SMALL LETTER F WITH HOOK
        0x01A0 => Some("Ohorn"),                // LATIN CAPITAL LETTER O WITH HORN
        0x01A1 => Some("ohorn"),                // LATIN SMALL LETTER O WITH HORN
        0x01AF => Some("Uhorn"),                // LATIN CAPITAL LETTER U WITH HORN
        0x01B0 => Some("uhorn"),                // LATIN SMALL LETTER U WITH HORN
        0x01E6 => Some("Gcaron"),               // LATIN CAPITAL LETTER G WITH CARON
        0x01E7 => Some("gcaron"),               // LATIN SMALL LETTER G WITH CARON
        0x01FA => Some("Aringacute"),           // LATIN CAPITAL LETTER A WITH RING ABOVE AND ACUTE
        0x01FB => Some("aringacute"),           // LATIN SMALL LETTER A WITH RING ABOVE AND ACUTE
        0x01FC => Some("AEacute"),              // LATIN CAPITAL LETTER AE WITH ACUTE
        0x01FD => Some("aeacute"),              // LATIN SMALL LETTER AE WITH ACUTE
        0x01FE => Some("Oslashacute"),          // LATIN CAPITAL LETTER O WITH STROKE AND ACUTE
        0x01FF => Some("oslashacute"),          // LATIN SMALL LETTER O WITH STROKE AND ACUTE
        0x02C6 => Some("circumflex"),           // MODIFIER LETTER CIRCUMFLEX ACCENT
        0x02C7 => Some("caron"),                // CARON
        0x02D8 => Some("breve"),                // BREVE
        0x02D9 => Some("dotaccent"),            // DOT ABOVE
        0x02DA => Some("ring"),                 // RING ABOVE
        0x02DB => Some("ogonek"),               // OGONEK
        0x02DC => Some("tilde"),                // SMALL TILDE
        0x02DD => Some("hungarumlaut"),         // DOUBLE ACUTE ACCENT
        0x0300 => Some("gravecomb"),            // COMBINING GRAVE ACCENT
        0x0301 => Some("acutecomb"),            // COMBINING ACUTE ACCENT
        0x0303 => Some("tildecomb"),            // COMBINING TILDE
        0x0309 => Some("hookabovecomb"),        // COMBINING HOOK ABOVE
        0x0323 => Some("dotbelowcomb"),         // COMBINING DOT BELOW
        0x0384 => Some("tonos"),                // GREEK TONOS
        0x0385 => Some("dieresistonos"),        // GREEK DIALYTIKA TONOS
        0x0386 => Some("Alphatonos"),           // GREEK CAPITAL LETTER ALPHA WITH TONOS
        0x0387 => Some("anoteleia"),            // GREEK ANO TELEIA
        0x0388 => Some("Epsilontonos"),         // GREEK CAPITAL LETTER EPSILON WITH TONOS
        0x0389 => Some("Etatonos"),             // GREEK CAPITAL LETTER ETA WITH TONOS
        0x038A => Some("Iotatonos"),            // GREEK CAPITAL LETTER IOTA WITH TONOS
        0x038C => Some("Omicrontonos"),         // GREEK CAPITAL LETTER OMICRON WITH TONOS
        0x038E => Some("Upsilontonos"),         // GREEK CAPITAL LETTER UPSILON WITH TONOS
        0x038F => Some("Omegatonos"),           // GREEK CAPITAL LETTER OMEGA WITH TONOS
        0x0390 => Some("iotadieresistonos"),    // GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS
        0x0391 => Some("Alpha"),                // GREEK CAPITAL LETTER ALPHA
        0x0392 => Some("Beta"),                 // GREEK CAPITAL LETTER BETA
        0x0393 => Some("Gamma"),                // GREEK CAPITAL LETTER GAMMA
        0x0395 => Some("Epsilon"),              // GREEK CAPITAL LETTER EPSILON
        0x0396 => Some("Zeta"),                 // GREEK CAPITAL LETTER ZETA
        0x0397 => Some("Eta"),                  // GREEK CAPITAL LETTER ETA
        0x0398 => Some("Theta"),                // GREEK CAPITAL LETTER THETA
        0x0399 => Some("Iota"),                 // GREEK CAPITAL LETTER IOTA
        0x039A => Some("Kappa"),                // GREEK CAPITAL LETTER KAPPA
        0x039B => Some("Lambda"),               // GREEK CAPITAL LETTER LAMDA
        0x039C => Some("Mu"),                   // GREEK CAPITAL LETTER MU
        0x039D => Some("Nu"),                   // GREEK CAPITAL LETTER NU
        0x039E => Some("Xi"),                   // GREEK CAPITAL LETTER XI
        0x039F => Some("Omicron"),              // GREEK CAPITAL LETTER OMICRON
        0x03A0 => Some("Pi"),                   // GREEK CAPITAL LETTER PI
        0x03A1 => Some("Rho"),                  // GREEK CAPITAL LETTER RHO
        0x03A3 => Some("Sigma"),                // GREEK CAPITAL LETTER SIGMA
        0x03A4 => Some("Tau"),                  // GREEK CAPITAL LETTER TAU
        0x03A5 => Some("Upsilon"),              // GREEK CAPITAL LETTER UPSILON
        0x03A6 => Some("Phi"),                  // GREEK CAPITAL LETTER PHI
        0x03A7 => Some("Chi"),                  // GREEK CAPITAL LETTER CHI
        0x03A8 => Some("Psi"),                  // GREEK CAPITAL LETTER PSI
        0x03AA => Some("Iotadieresis"),         // GREEK CAPITAL LETTER IOTA WITH DIALYTIKA
        0x03AB => Some("Upsilondieresis"),      // GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA
        0x03AC => Some("alphatonos"),           // GREEK SMALL LETTER ALPHA WITH TONOS
        0x03AD => Some("epsilontonos"),         // GREEK SMALL LETTER EPSILON WITH TONOS
        0x03AE => Some("etatonos"),             // GREEK SMALL LETTER ETA WITH TONOS
        0x03AF => Some("iotatonos"),            // GREEK SMALL LETTER IOTA WITH TONOS
        0x03B0 => Some("upsilondieresistonos"), // GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS
        0x03B1 => Some("alpha"),                // GREEK SMALL LETTER ALPHA
        0x03B2 => Some("beta"),                 // GREEK SMALL LETTER BETA
        0x03B3 => Some("gamma"),                // GREEK SMALL LETTER GAMMA
        0x03B4 => Some("delta"),                // GREEK SMALL LETTER DELTA
        0x03B5 => Some("epsilon"),              // GREEK SMALL LETTER EPSILON
        0x03B6 => Some("zeta"),                 // GREEK SMALL LETTER ZETA
        0x03B7 => Some("eta"),                  // GREEK SMALL LETTER ETA
        0x03B8 => Some("theta"),                // GREEK SMALL LETTER THETA
        0x03B9 => Some("iota"),                 // GREEK SMALL LETTER IOTA
        0x03BA => Some("kappa"),                // GREEK SMALL LETTER KAPPA
        0x03BB => Some("lambda"),               // GREEK SMALL LETTER LAMDA
        0x03BD => Some("nu"),                   // GREEK SMALL LETTER NU
        0x03BE => Some("xi"),                   // GREEK SMALL LETTER XI
        0x03BF => Some("omicron"),              // GREEK SMALL LETTER OMICRON
        0x03C0 => Some("pi"),                   // GREEK SMALL LETTER PI
        0x03C1 => Some("rho"),                  // GREEK SMALL LETTER RHO
        0x03C2 => Some("sigma1"),               // GREEK SMALL LETTER FINAL SIGMA
        0x03C3 => Some("sigma"),                // GREEK SMALL LETTER SIGMA
        0x03C4 => Some("tau"),                  // GREEK SMALL LETTER TAU
        0x03C5 => Some("upsilon"),              // GREEK SMALL LETTER UPSILON
        0x03C6 => Some("phi"),                  // GREEK SMALL LETTER PHI
        0x03C7 => Some("chi"),                  // GREEK SMALL LETTER CHI
        0x03C8 => Some("psi"),                  // GREEK SMALL LETTER PSI
        0x03C9 => Some("omega"),                // GREEK SMALL LETTER OMEGA
        0x03CA => Some("iotadieresis"),         // GREEK SMALL LETTER IOTA WITH DIALYTIKA
        0x03CB => Some("upsilondieresis"),      // GREEK SMALL LETTER UPSILON WITH DIALYTIKA
        0x03CC => Some("omicrontonos"),         // GREEK SMALL LETTER OMICRON WITH TONOS
        0x03CD => Some("upsilontonos"),         // GREEK SMALL LETTER UPSILON WITH TONOS
        0x03CE => Some("omegatonos"),           // GREEK SMALL LETTER OMEGA WITH TONOS
        0x03D1 => Some("theta1"),               // GREEK THETA SYMBOL
        0x03D2 => Some("Upsilon1"),             // GREEK UPSILON WITH HOOK SYMBOL
        0x03D5 => Some("phi1"),                 // GREEK PHI SYMBOL
        0x03D6 => Some("omega1"),               // GREEK PI SYMBOL
        0x1E80 => Some("Wgrave"),               // LATIN CAPITAL LETTER W WITH GRAVE
        0x1E81 => Some("wgrave"),               // LATIN SMALL LETTER W WITH GRAVE
        0x1E82 => Some("Wacute"),               // LATIN CAPITAL LETTER W WITH ACUTE
        0x1E83 => Some("wacute"),               // LATIN SMALL LETTER W WITH ACUTE
        0x1E84 => Some("Wdieresis"),            // LATIN CAPITAL LETTER W WITH DIAERESIS
        0x1E85 => Some("wdieresis"),            // LATIN SMALL LETTER W WITH DIAERESIS
        0x1EF2 => Some("Ygrave"),               // LATIN CAPITAL LETTER Y WITH GRAVE
        0x1EF3 => Some("ygrave"),               // LATIN SMALL LETTER Y WITH GRAVE
        0x2012 => Some("figuredash"),           // FIGURE DASH
        0x2013 => Some("endash"),               // EN DASH
        0x2014 => Some("emdash"),               // EM DASH
        0x2017 => Some("underscoredbl"),        // DOUBLE LOW LINE
        0x2018 => Some("quoteleft"),            // LEFT SINGLE QUOTATION MARK
        0x2019 => Some("quoteright"),           // RIGHT SINGLE QUOTATION MARK
        0x201A => Some("quotesinglbase"),       // SINGLE LOW-9 QUOTATION MARK
        0x201B => Some("quotereversed"),        // SINGLE HIGH-REVERSED-9 QUOTATION MARK
        0x201C => Some("quotedblleft"),         // LEFT DOUBLE QUOTATION MARK
        0x201D => Some("quotedblright"),        // RIGHT DOUBLE QUOTATION MARK
        0x201E => Some("quotedblbase"),         // DOUBLE LOW-9 QUOTATION MARK
        0x2020 => Some("dagger"),               // DAGGER
        0x2021 => Some("daggerdbl"),            // DOUBLE DAGGER
        0x2022 => Some("bullet"),               // BULLET
        0x2024 => Some("onedotenleader"),       // ONE DOT LEADER
        0x2025 => Some("twodotenleader"),       // TWO DOT LEADER
        0x2026 => Some("ellipsis"),             // HORIZONTAL ELLIPSIS
        0x2030 => Some("perthousand"),          // PER MILLE SIGN
        0x2032 => Some("minute"),               // PRIME
        0x2033 => Some("second"),               // DOUBLE PRIME
        0x2039 => Some("guilsinglleft"),        // SINGLE LEFT-POINTING ANGLE QUOTATION MARK
        0x203A => Some("guilsinglright"),       // SINGLE RIGHT-POINTING ANGLE QUOTATION MARK
        0x203C => Some("exclamdbl"),            // DOUBLE EXCLAMATION MARK
        0x2044 => Some("fraction"),             // FRACTION SLASH
        0x20A1 => Some("colonmonetary"),        // COLON SIGN
        0x20A3 => Some("franc"),                // FRENCH FRANC SIGN
        0x20A4 => Some("lira"),                 // LIRA SIGN
        0x20A7 => Some("peseta"),               // PESETA SIGN
        0x20AB => Some("dong"),                 // DONG SIGN
        0x20AC => Some("Euro"),                 // EURO SIGN
        0x2111 => Some("Ifraktur"),             // BLACK-LETTER CAPITAL I
        0x2118 => Some("weierstrass"),          // SCRIPT CAPITAL P
        0x211C => Some("Rfraktur"),             // BLACK-LETTER CAPITAL R
        0x211E => Some("prescription"),         // PRESCRIPTION TAKE
        0x2122 => Some("trademark"),            // TRADE MARK SIGN
        0x2126 => Some("Omega"),                // OHM SIGN
        0x212E => Some("estimated"),            // ESTIMATED SYMBOL
        0x2135 => Some("aleph"),                // ALEF SYMBOL
        0x2153 => Some("onethird"),             // VULGAR FRACTION ONE THIRD
        0x2154 => Some("twothirds"),            // VULGAR FRACTION TWO THIRDS
        0x215B => Some("oneeighth"),            // VULGAR FRACTION ONE EIGHTH
        0x215C => Some("threeeighths"),         // VULGAR FRACTION THREE EIGHTHS
        0x215D => Some("fiveeighths"),          // VULGAR FRACTION FIVE EIGHTHS
        0x215E => Some("seveneighths"),         // VULGAR FRACTION SEVEN EIGHTHS
        0x2190 => Some("arrowleft"),            // LEFTWARDS ARROW
        0x2191 => Some("arrowup"),              // UPWARDS ARROW
        0x2192 => Some("arrowright"),           // RIGHTWARDS ARROW
        0x2193 => Some("arrowdown"),            // DOWNWARDS ARROW
        0x2194 => Some("arrowboth"),            // LEFT RIGHT ARROW
        0x2195 => Some("arrowupdn"),            // UP DOWN ARROW
        0x21A8 => Some("arrowupdnbse"),         // UP DOWN ARROW WITH BASE
        0x21B5 => Some("carriagereturn"),       // DOWNWARDS ARROW WITH CORNER LEFTWARDS
        0x21D0 => Some("arrowdblleft"),         // LEFTWARDS DOUBLE ARROW
        0x21D1 => Some("arrowdblup"),           // UPWARDS DOUBLE ARROW
        0x21D2 => Some("arrowdblright"),        // RIGHTWARDS DOUBLE ARROW
        0x21D3 => Some("arrowdbldown"),         // DOWNWARDS DOUBLE ARROW
        0x21D4 => Some("arrowdblboth"),         // LEFT RIGHT DOUBLE ARROW
        0x2200 => Some("universal"),            // FOR ALL
        0x2202 => Some("partialdiff"),          // PARTIAL DIFFERENTIAL
        0x2203 => Some("existential"),          // THERE EXISTS
        0x2205 => Some("emptyset"),             // EMPTY SET
        0x2206 => Some("Delta"),                // INCREMENT
        0x2207 => Some("gradient"),             // NABLA
        0x2208 => Some("element"),              // ELEMENT OF
        0x2209 => Some("notelement"),           // NOT AN ELEMENT OF
        0x220B => Some("suchthat"),             // CONTAINS AS MEMBER
        0x220F => Some("product"),              // N-ARY PRODUCT
        0x2211 => Some("summation"),            // N-ARY SUMMATION
        0x2212 => Some("minus"),                // MINUS SIGN
        0x2217 => Some("asteriskmath"),         // ASTERISK OPERATOR
        0x221A => Some("radical"),              // SQUARE ROOT
        0x221D => Some("proportional"),         // PROPORTIONAL TO
        0x221E => Some("infinity"),             // INFINITY
        0x221F => Some("orthogonal"),           // RIGHT ANGLE
        0x2220 => Some("angle"),                // ANGLE
        0x2227 => Some("logicaland"),           // LOGICAL AND
        0x2228 => Some("logicalor"),            // LOGICAL OR
        0x2229 => Some("intersection"),         // INTERSECTION
        0x222A => Some("union"),                // UNION
        0x222B => Some("integral"),             // INTEGRAL
        0x2234 => Some("therefore"),            // THEREFORE
        0x223C => Some("similar"),              // TILDE OPERATOR
        0x2245 => Some("congruent"),            // APPROXIMATELY EQUAL TO
        0x2248 => Some("approxequal"),          // ALMOST EQUAL TO
        0x2260 => Some("notequal"),             // NOT EQUAL TO
        0x2261 => Some("equivalence"),          // IDENTICAL TO
        0x2264 => Some("lessequal"),            // LESS-THAN OR EQUAL TO
        0x2265 => Some("greaterequal"),         // GREATER-THAN OR EQUAL TO
        0x2282 => Some("propersubset"),         // SUBSET OF
        0x2283 => Some("propersuperset"),       // SUPERSET OF
        0x2284 => Some("notsubset"),            // NOT A SUBSET OF
        0x2286 => Some("reflexsubset"),         // SUBSET OF OR EQUAL TO
        0x2287 => Some("reflexsuperset"),       // SUPERSET OF OR EQUAL TO
        0x2295 => Some("circleplus"),           // CIRCLED PLUS
        0x2297 => Some("circlemultiply"),       // CIRCLED TIMES
        0x22A5 => Some("perpendicular"),        // UP TACK
        0x22C5 => Some("dotmath"),              // DOT OPERATOR
        0x2302 => Some("house"),                // HOUSE
        0x2310 => Some("revlogicalnot"),        // REVERSED NOT SIGN
        0x2320 => Some("integraltp"),           // TOP HALF INTEGRAL
        0x2321 => Some("integralbt"),           // BOTTOM HALF INTEGRAL
        0x2329 => Some("angleleft"),            // LEFT-POINTING ANGLE BRACKET
        0x232A => Some("angleright"),           // RIGHT-POINTING ANGLE BRACKET
        0x2500 => Some("SF100000"),             // BOX DRAWINGS LIGHT HORIZONTAL
        0x2502 => Some("SF110000"),             // BOX DRAWINGS LIGHT VERTICAL
        0x250C => Some("SF010000"),             // BOX DRAWINGS LIGHT DOWN AND RIGHT
        0x2510 => Some("SF030000"),             // BOX DRAWINGS LIGHT DOWN AND LEFT
        0x2514 => Some("SF020000"),             // BOX DRAWINGS LIGHT UP AND RIGHT
        0x2518 => Some("SF040000"),             // BOX DRAWINGS LIGHT UP AND LEFT
        0x251C => Some("SF080000"),             // BOX DRAWINGS LIGHT VERTICAL AND RIGHT
        0x2524 => Some("SF090000"),             // BOX DRAWINGS LIGHT VERTICAL AND LEFT
        0x252C => Some("SF060000"),             // BOX DRAWINGS LIGHT DOWN AND HORIZONTAL
        0x2534 => Some("SF070000"),             // BOX DRAWINGS LIGHT UP AND HORIZONTAL
        0x253C => Some("SF050000"),             // BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL
        0x2550 => Some("SF430000"),             // BOX DRAWINGS DOUBLE HORIZONTAL
        0x2551 => Some("SF240000"),             // BOX DRAWINGS DOUBLE VERTICAL
        0x2552 => Some("SF510000"),             // BOX DRAWINGS DOWN SINGLE AND RIGHT DOUBLE
        0x2553 => Some("SF520000"),             // BOX DRAWINGS DOWN DOUBLE AND RIGHT SINGLE
        0x2554 => Some("SF390000"),             // BOX DRAWINGS DOUBLE DOWN AND RIGHT
        0x2555 => Some("SF220000"),             // BOX DRAWINGS DOWN SINGLE AND LEFT DOUBLE
        0x2556 => Some("SF210000"),             // BOX DRAWINGS DOWN DOUBLE AND LEFT SINGLE
        0x2557 => Some("SF250000"),             // BOX DRAWINGS DOUBLE DOWN AND LEFT
        0x2558 => Some("SF500000"),             // BOX DRAWINGS UP SINGLE AND RIGHT DOUBLE
        0x2559 => Some("SF490000"),             // BOX DRAWINGS UP DOUBLE AND RIGHT SINGLE
        0x255A => Some("SF380000"),             // BOX DRAWINGS DOUBLE UP AND RIGHT
        0x255B => Some("SF280000"),             // BOX DRAWINGS UP SINGLE AND LEFT DOUBLE
        0x255C => Some("SF270000"),             // BOX DRAWINGS UP DOUBLE AND LEFT SINGLE
        0x255D => Some("SF260000"),             // BOX DRAWINGS DOUBLE UP AND LEFT
        0x255E => Some("SF360000"),             // BOX DRAWINGS VERTICAL SINGLE AND RIGHT DOUBLE
        0x255F => Some("SF370000"),             // BOX DRAWINGS VERTICAL DOUBLE AND RIGHT SINGLE
        0x2560 => Some("SF420000"),             // BOX DRAWINGS DOUBLE VERTICAL AND RIGHT
        0x2561 => Some("SF190000"),             // BOX DRAWINGS VERTICAL SINGLE AND LEFT DOUBLE
        0x2562 => Some("SF200000"),             // BOX DRAWINGS VERTICAL DOUBLE AND LEFT SINGLE
        0x2563 => Some("SF230000"),             // BOX DRAWINGS DOUBLE VERTICAL AND LEFT
        0x2564 => Some("SF470000"),             // BOX DRAWINGS DOWN SINGLE AND HORIZONTAL DOUBLE
        0x2565 => Some("SF480000"),             // BOX DRAWINGS DOWN DOUBLE AND HORIZONTAL SINGLE
        0x2566 => Some("SF410000"),             // BOX DRAWINGS DOUBLE DOWN AND HORIZONTAL
        0x2567 => Some("SF450000"),             // BOX DRAWINGS UP SINGLE AND HORIZONTAL DOUBLE
        0x2568 => Some("SF460000"),             // BOX DRAWINGS UP DOUBLE AND HORIZONTAL SINGLE
        0x2569 => Some("SF400000"),             // BOX DRAWINGS DOUBLE UP AND HORIZONTAL
        0x256A => Some("SF540000"),             // BOX DRAWINGS VERTICAL SINGLE AND HORIZONTAL DOUBLE
        0x256B => Some("SF530000"),             // BOX DRAWINGS VERTICAL DOUBLE AND HORIZONTAL SINGLE
        0x256C => Some("SF440000"),             // BOX DRAWINGS DOUBLE VERTICAL AND HORIZONTAL
        0x2580 => Some("upblock"),              // UPPER HALF BLOCK
        0x2584 => Some("dnblock"),              // LOWER HALF BLOCK
        0x2588 => Some("block"),                // FULL BLOCK
        0x258C => Some("lfblock"),              // LEFT HALF BLOCK
        0x2590 => Some("rtblock"),              // RIGHT HALF BLOCK
        0x2591 => Some("ltshade"),              // LIGHT SHADE
        0x2592 => Some("shade"),                // MEDIUM SHADE
        0x2593 => Some("dkshade"),              // DARK SHADE
        0x25A0 => Some("filledbox"),            // BLACK SQUARE
        0x25A1 => Some("H22073"),               // WHITE SQUARE
        0x25AA => Some("H18543"),               // BLACK SMALL SQUARE
        0x25AB => Some("H18551"),               // WHITE SMALL SQUARE
        0x25AC => Some("filledrect"),           // BLACK RECTANGLE
        0x25B2 => Some("triagup"),              // BLACK UP-POINTING TRIANGLE
        0x25BA => Some("triagrt"),              // BLACK RIGHT-POINTING POINTER
        0x25BC => Some("triagdn"),              // BLACK DOWN-POINTING TRIANGLE
        0x25C4 => Some("triaglf"),              // BLACK LEFT-POINTING POINTER
        0x25CA => Some("lozenge"),              // LOZENGE
        0x25CB => Some("circle"),               // WHITE CIRCLE
        0x25CF => Some("H18533"),               // BLACK CIRCLE
        0x25D8 => Some("invbullet"),            // INVERSE BULLET
        0x25D9 => Some("invcircle"),            // INVERSE WHITE CIRCLE
        0x25E6 => Some("openbullet"),           // WHITE BULLET
        0x263A => Some("smileface"),            // WHITE SMILING FACE
        0x263B => Some("invsmileface"),         // BLACK SMILING FACE
        0x263C => Some("sun"),                  // WHITE SUN WITH RAYS
        0x2640 => Some("female"),               // FEMALE SIGN
        0x2642 => Some("male"),                 // MALE SIGN
        0x2660 => Some("spade"),                // BLACK SPADE SUIT
        0x2663 => Some("club"),                 // BLACK CLUB SUIT
        0x2665 => Some("heart"),                // BLACK HEART SUIT
        0x2666 => Some("diamond"),              // BLACK DIAMOND SUIT
        0x266A => Some("musicalnote"),          // EIGHTH NOTE
        0x266B => Some("musicalnotedbl"),       // BEAMED EIGHTH NOTES
        _ => None,
    }
}
